{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ProductcreateComponent = class ProductcreateComponent {\n  constructor(router, storage, productService, formbuild, uploadImage) {\n    var _a;\n\n    this.router = router;\n    this.storage = storage;\n    this.productService = productService;\n    this.formbuild = formbuild;\n    this.uploadImage = uploadImage;\n    this.valueitem = null;\n    this.isOverDrop = false;\n    this.urlImagen = [];\n    this.finImage = [];\n    this.pathImage = '../../../assets/img/cloud.png';\n    this.isNumber = /^([0-9]){1-20}$/;\n    this.navigationextras = {\n      state: {\n        value: null\n      }\n    };\n    const navigation = this.router.getCurrentNavigation();\n    this.valueitem = (_a = navigation === null || navigation === void 0 ? void 0 : navigation.extras) === null || _a === void 0 ? void 0 : _a.state;\n    this.CreateProductForm();\n  }\n\n  onUpload(e) {\n    this.name = e.target.value;\n    console.log(this.name);\n  }\n\n  onUploadImage(event) {\n    const archivos = event.target.files;\n\n    for (let i = 0; i < archivos.length; i++) {\n      const reader = new FileReader();\n      console.log(this.uploadImage + '\\n');\n      reader.readAsDataURL(archivos[i]);\n\n      reader.onloadend = () => {\n        this.finImage.push(reader.result);\n        this.uploadImage.createImage(this.name, reader.result).then(urlImage => {\n          this.urlImagen[i] = urlImage;\n          console.log(urlImage + '\\n' + this.urlImagen[i]);\n        });\n        console.log(this.uploadImage + '\\n');\n      };\n    }\n\n    console.log(event.target.files);\n  }\n\n  onCreate() {\n    this.router.navigate(['productcreate']);\n  }\n\n  onGoToDelete(valueitem) {\n    // tslint:disable-next-line:no-non-null-assertion\n    this.productService.deleteProductList(valueitem.Id);\n  }\n\n  onGoToBack() {\n    this.router.navigate(['productlist']);\n  }\n\n  CreateProductForm() {\n    this.productsForm = this.formbuild.group({\n      name: ['', [Validators.required]],\n      tipo: ['', [Validators.required]],\n      price: ['', [Validators.required, Validators.pattern(this.isNumber)]],\n      quantity: ['', [Validators.required, Validators.pattern(this.isNumber)]],\n      units: [''],\n      description: ['', [Validators.required]],\n      imageProduct: [[]]\n    });\n  }\n\n  ngOnInit() {\n    if (typeof this.valueitem === 'undefined') {\n      this.router.navigate(['productcreate']);\n    } else {\n      // this.urlImagen = this.valueitem.imageProduct.value;\n      const countImage = Object.values(this.valueitem.imageProduct).length;\n      const archivos = Object.values(this.valueitem.imageProduct);\n\n      for (let i = 0; i < countImage; i++) {\n        this.finImage[i] = archivos[i];\n        this.urlImagen[i] = archivos[i];\n      }\n\n      console.log(archivos);\n      alert(this.finImage);\n      this.productsForm.patchValue(this.valueitem);\n    }\n  }\n\n  onSubmit() {\n    var _a;\n\n    for (let i = 0; i < this.urlImagen.length; i++) {\n      this.productsForm.value.imageProduct[i] = this.urlImagen[i];\n      console.log(this.productsForm.valid + '\\nimagen' + i + ' ' + this.productsForm.value.imageProduct);\n    }\n\n    if (!this.productsForm.valid) {\n      console.log(this.productsForm.value);\n      const product = this.productsForm.value;\n      const productId = ((_a = this.valueitem) === null || _a === void 0 ? void 0 : _a.Id) || null;\n      this.productService.insertProductList(product, productId);\n      this.resetForm(this.productsForm);\n      this.router.navigate(['productlist']);\n    }\n  }\n\n  resetForm(productsForm) {\n    if (productsForm != null) {\n      this.productsForm.reset(); // this.productService.selectproduct =  this.valueitem;\n    }\n  }\n\n};\nProductcreateComponent = __decorate([Component({\n  selector: 'app-productcreate',\n  templateUrl: './productcreate.component.html',\n  styleUrls: ['./productcreate.component.scss']\n})], ProductcreateComponent);\nexport { ProductcreateComponent };","map":null,"metadata":{},"sourceType":"module"}